name: Test labels remove
on:
#  # Uncomment when test added first time to register workflow and comment it back after workflow would be registered
#  #
#  # Added pull_request to register workflow from the PR.
#  # Read more https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo
#  pull_request: {}
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

      - name: Context
        id: context
        shell: sh
        run: |
          echo "label=run-${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_OUTPUT
          case "${{ github.ref_name }}" in
            main)
              echo "branch=create-pr-action/run-${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_OUTPUT
            ;;
            *)
              echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            ;;
          esac

      - name: Update composer packages
        if: ${{ github.ref_name == 'main' }}
        uses: technote-space/create-pr-action@v2
        with:
          GITHUB_TOKEN: "${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}"
          EXECUTE_COMMANDS: |
            echo "${{ steps.context.outputs.label }}" >> README.md
          COMMIT_MESSAGE: 'Test ${{ steps.context.outputs.label }}'
          COMMIT_NAME: 'Test ${{ steps.context.outputs.label }}'
          COMMIT_EMAIL: 'example@example.com'
          PR_BRANCH_NAME: '${{ steps.context.outputs.label }}'
          PR_TITLE: 'Test ${{ steps.context.outputs.label }}'

      - uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const result = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: "${{ github.repository_owner }}:${{ steps.context.outputs.branch }}"
              }); 
            
            return result.data[0].number
          result-encoding: string

      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: "${{ steps.context.outputs.label }}"
          number: ${{ steps.pr.outputs.result }}

    outputs:
      pr_number: ${{ steps.pr.outputs.result }}
      branch: ${{ steps.context.outputs.branch }}
      label: ${{ steps.context.outputs.label }}

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: snnaplab/get-labels-action@v1
        id: labels
        with:
          number: ${{ needs.setup.outputs.pr_number }}

      - uses: nick-fields/assert-action@v1
        with:
          comparison: "contains"
          expected: "${{ needs.setup.outputs.label }}"
          actual: "${{ steps.labels.outputs.labels }}"

      - uses: ./
        id: current
        with:
          labels_env: '{"dev": "${{ needs.setup.outputs.label }}"}'
          env: "dev"
          pr_number: ${{ needs.setup.outputs.pr_number }}

  assert:
    runs-on: ubuntu-latest
    needs: [setup, test]
    steps:
      - uses: snnaplab/get-labels-action@v1
        id: labels
        with:
          number: ${{ needs.setup.outputs.pr_number }}

      - uses: nick-fields/assert-action@v1
        with:
          comparison: "notContains"
          expected: "${{ needs.setup.outputs.label }}"
          actual: "${{ steps.labels.outputs.labels }}"

  teardown:
    runs-on: ubuntu-latest
    needs: [setup, assert]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"

      - uses: actions/github-script@v7
        with:
          script: |
            const label = '${{ needs.setup.outputs.label }}';
            const prNumber = '${{ needs.setup.outputs.pr_number }}';
            console.log(`Label: ${label}, PR Number: ${prNumber}`);

            try {
              const result = await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                name: label
              });
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
              console.log(`Label ${label} was not found on PR #${prNumber}`);
            }

      - uses: actions/github-script@v6
        if: ${{ github.ref_name == 'main' }}
        with:
          script: |
            const result = await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "heads/${{ needs.setup.outputs.branch }}"
            }); 
