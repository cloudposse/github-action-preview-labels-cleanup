name: Test example positive
on:
#  # Uncomment when test added first time to register workflow and comment it back after workflow would be registered
#  #
#  # Added pull_request to register workflow from the PR.
#  # Read more https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo
#  pull_request: {}
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

      - name: Context
        id: context
        shell: sh
        run: |
          echo "::set-output name=changes::run-${{ github.run_id }}-${{ github.run_number }}"        

#      - name: Update composer packages
#        uses: technote-space/create-pr-action@v2
#        with:
#          GITHUB_TOKEN: "${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}"
#          EXECUTE_COMMANDS: |
#            echo "${{ steps.context.outputs.changes }}" >> README.md
#          COMMIT_MESSAGE: 'Test ${{ steps.context.outputs.changes }}'
#          COMMIT_NAME: 'Test ${{ steps.context.outputs.changes }}'
#          COMMIT_EMAIL: 'example@example.com'
#          PR_BRANCH_NAME: 'run-tests-${PR_ID}'
#          PR_TITLE: 'Test ${{ steps.context.outputs.changes }}'

      - uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const result = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: "${{ github.repository_owner }}:${{ github.ref_name }}"
              }); 
            
            return result.data[0].number
          result-encoding: string

      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: "${{ steps.context.outputs.changes }}"
          number: ${{ toJson(steps.pr.outputs.result) }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: snnaplab/get-labels-action@v1
        id: labels

      - uses: nick-fields/assert-action@v1
        with:
          comparison: "contains"
          expected: "${{ steps.context.outputs.changes }}"
          actual: "${{ steps.labels.outputs.labels }}"

      - uses: ./
        id: current
        with:
          labels_env: '{"${{ steps.context.outputs.changes }}": "dev"}'
          env: "dev"

    outputs:
      result: "${{ steps.current.outputs.result1 }}"

  assert:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: snnaplab/get-labels-action@v1
        id: labels

      - uses: nick-fields/assert-action@v1
        with:
          comparison: "exact"
          expected: ''
          actual: "${{ steps.labels.outputs.labels }}"

  teardown:
    runs-on: ubuntu-latest
    needs: [assert]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"
